[{"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\index.js":"1","C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\pages\\login\\index.js":"2","C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\utils\\firebaseConfig.js":"3","C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\pages\\register\\index.js":"4","C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\reportWebVitals.js":"5","C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\pages\\eventos\\index.js":"6"},{"size":916,"mtime":1607816877521,"results":"7","hashOfConfig":"8"},{"size":2329,"mtime":1607816880619,"results":"9","hashOfConfig":"8"},{"size":766,"mtime":1607966434410,"results":"10","hashOfConfig":"8"},{"size":2299,"mtime":1607737133432,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1607618972395,"results":"12","hashOfConfig":"8"},{"size":7401,"mtime":1607969211971,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"j3scnr",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\index.js",["30","31"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './pages/login';\nimport Register from './pages/register';\nimport EventosPage from './pages/eventos';\nimport reportWebVitals from './reportWebVitals';\n\n// precisamos implementar esse fire base em todo o projeto\nimport {FirebaseAppProvider} from 'reactfire';\nimport firebaseConfig from './utils/firebaseConfig';\n\n// css do bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <EventosPage />\n   </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["32","33"],"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\pages\\login\\index.js",[],"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\utils\\firebaseConfig.js",[],"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\pages\\register\\index.js",[],["34","35"],"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\reportWebVitals.js",[],"C:\\Users\\dejai_000\\Desktop\\Kaua Trabalhos\\SENAI\\2°Termo\\Sprint-5 NoSQL FireBase\\3 - Apresentação FireBase e Integração React\\nyous-react-app\\src\\pages\\eventos\\index.js",["36","37"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Table, Card } from 'react-bootstrap';\r\nimport { db, storage } from '../../utils/firebaseConfig';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\n\r\nconst EventosPage = () => {\r\n    // Criar os estados a serem utilizados\r\n    const [id, setId] = useState(0);\r\n    const [nome, setNome] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [urlImagem, setUrlImagem] = useState('');\r\n\r\n    const [eventos, setEventos] = useState([]);\r\n\r\n    // Primeiro item a ser renderizado na pagina\r\n    useEffect(() => {\r\n        listarEventos();\r\n    }, [])\r\n\r\n    //Lista os eventos\r\n    const listarEventos = () => {\r\n        try {\r\n            db.collection('eventos')\r\n                .get()\r\n                .then((result) => {\r\n                    console.log(result.docs);\r\n                    const data = result.docs.map(doc => { // map => vai percorrer todo o documento\r\n                        return {\r\n                            id: doc.id,\r\n                            nome: doc.data().nome,\r\n                            descricao: doc.data().descricao,\r\n                            urlImagem : doc.data().urlImagem\r\n                        }\r\n                    })\r\n                    // Define as informações encontradas\r\n                    setEventos(data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error)\r\n                });\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    // Salva os eventos\r\n    const salvar = (event) => {\r\n        event.preventDefault();\r\n\r\n        const evento = {\r\n            nome: nome,\r\n            descricao: descricao,\r\n            urlImagem : urlImagem\r\n        }\r\n        // Se ele n existir, ou seja, seu id for = 0, adiciona um novo evento\r\n        if (id === 0) {\r\n            db.collection('eventos')\r\n                .add(evento)\r\n                .then(() => {\r\n                    alert('Evento Cadastrado');\r\n                    listarEventos();\r\n                    limparCampos();\r\n                })\r\n                .catch(error => console.error(error));\r\n        } else {\r\n            db.collection('eventos')\r\n                .doc(id)\r\n                .set(evento)\r\n                .then(() =>{\r\n                    alert('Evento Alterado com Sucesso');\r\n                    listarEventos();\r\n                    limparCampos();\r\n                })\r\n        }\r\n        const limparCampos = () => {\r\n            setId(0);\r\n            setNome('');\r\n            setDescricao('');\r\n            setUrlImagem('');\r\n        }\r\n    }\r\n\r\n    //Remove os eventos\r\n    const remover = (event) => {\r\n        event.preventDefault();\r\n\r\n        db.collection('eventos')\r\n            .doc(event.target.value)\r\n            .delete()\r\n            .then(() =>{\r\n                alert('Evento removido com sucesso')\r\n                listarEventos();\r\n            })\r\n    }\r\n\r\n    // Edita os eventos\r\n    const editar = (event) => {\r\n        try {\r\n            db.collection('eventos')\r\n                .doc(event.target.value)\r\n                .get()\r\n                .then(doc =>{\r\n                    setId(doc.id);\r\n                    setNome(doc.data().nome);\r\n                    setDescricao(doc.data().descricao);\r\n                    setUrlImagem(doc.data().urlImagem);\r\n                });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const handleUploadError = error =>{\r\n        console.error(error);\r\n    }\r\n\r\n    const handleUploadSuccess = filename =>{\r\n        console.log('Sucesso upload: '+ filename);\r\n\r\n        storage \r\n            .ref('imagens')\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url =>setUrlImagem(url))\r\n            .catch(error =>console.error(error))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1>Eventos</h1>\r\n                <p>Gerencie os seus eventos</p>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Form onSubmit={event => salvar(event)}>\r\n                            <Form.Group>\r\n                                {urlImagem && <img src={urlImagem} style={{widht:'200px'}} />}\r\n                                <label style={{backgroundColor: 'steelblue', color: 'white', padding: 10, borderRadius:4,cursor:'pointer'}}>\r\n                                    Selecione a Imagem\r\n                                <FileUploader\r\n                                    hidden\r\n                                    accept=\"image/*\"\r\n                                    name=\"urlImagem\"\r\n                                    randomizeFilename\r\n                                    storageRef={storage.ref('imagens')}\r\n                                    onUploadError={handleUploadError}\r\n                                    onUploadSuccess={handleUploadSuccess}\r\n                                />\r\n                                </label>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicNome\">\r\n                                <Form.Label>Nome</Form.Label>\r\n                                <Form.Control type=\"text\" value={nome} onChange={event => setNome(event.target.value)} placeholder=\"Nome do evento\"></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicUrl\">\r\n                                <Form.Label>Descrição</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={descricao} onChange={event => setDescricao(event.target.value)} />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\">Salvar</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Nome</th>\r\n                            <th>Descrição</th>\r\n                            <th>Ações</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            eventos.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td><img src={item.urlImagem}  style={{widht:'100px'}}/></td>\r\n                                        <td>{item.nome}</td>\r\n                                        <td>{item.descricao}</td>\r\n                                        <td>\r\n                                            <Button variant=\"warning\" value={item.id} onClick={event => editar(event)} >Editar</Button>\r\n                                            <Button variant=\"danger\" value={item.id} onClick={event => remover(event)} style={{ marginLeft: '40px' }}>Remover</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventosPage;",{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":138,"column":47,"nodeType":"51","endLine":138,"endColumn":94},{"ruleId":"49","severity":1,"message":"50","line":179,"column":45,"nodeType":"51","endLine":179,"endColumn":97},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]